How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    The diff outline the place where if find differences between the versions.  By looking only at the differences, we can spot where the bugs are more easily.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It allows me to jump back to previous version if there is some major bugs in the current version. I do not have to work out the code from the beginning.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?
    
	One of the pros is having logical meaning for each commit, and we can keep the size of the changes optimal for comparison purpose.
	The cons is that you may forget to commit after a long period of time, which increases the chance of losing the work. 

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    It is because of the interrelation between the documents. Usually, Google Docs don't have linkage between files, but files in Git do.

How can you use the commands git log and git diff to view the history of files?
    
	"git log" will show you the history of the commit. It will give you the ID and a brief description of each commit. 
	"git diff" will compare two commits and show you which lines have added and which have deleted.

How might using version control make you more confident to make changes that
could break something?

    When I break something, I could always go back to an older version which works and starts from there again. 

Now that you have your workspace set up, what do you want to try using Git for?

    To start coding project on Git. 
